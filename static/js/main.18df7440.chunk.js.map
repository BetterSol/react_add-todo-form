{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","services/user.ts","components/TodoForm/TodoForm.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","_ref","user","_jsx","className","href","concat","email","children","name","TodoInfo","todo","completedTask","completed","_jsxs","id","title","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","TodoForm","onSubmit","_useState","useState","_useState2","_slicedToArray","setTitle","_useState3","_useState4","setUserId","_useState5","_useState6","hasTitleError","setHasTitleError","_useState7","_useState8","hasUserIdError","setHasUserIdError","action","method","event","preventDefault","type","value","placeholder","onChange","target","disabled","initialTodos","_objectSpread","App","setToDos","newTodo","sort","a","b","getNewTodoId","currentTodos","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.18df7440.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      { user.name }\n    </a>\n  );\n};\n","import { UserInfo } from '../UserInfo';\nimport { UsersToDo } from '../../types/ToDo';\n\ntype Props = {\n  todo: UsersToDo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const completedTask = todo.completed ? 'TodoInfo--completed' : '';\n\n  return (\n    <article\n      className={`TodoInfo ${completedTask}`}\n      data-id={todo.id}\n\n    >\n      <h2\n        className=\"TodoInfo__title\"\n        // style={{ color: todo.completed || 'blue'}}\n      >\n        {todo.title}\n      </h2>\n\n      { todo.user\n        ? <UserInfo user={todo.user} />\n        : ''}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { UsersToDo } from '../../types/ToDo';\n\ntype Props = {\n  todos: UsersToDo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      { todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\nimport { User } from '../types/User';\n\nexport function getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n","import React, { useState } from 'react';\n// import cn from \"classnames\";\nimport usersFromServer from '../../api/users';\nimport { UsersToDo } from '../../types/ToDo';\nimport { getUserById } from '../../services/user';\n// import { event } from 'cypress/types/jquery';\n\ntype Props = {\n  onSubmit: (todo: UsersToDo) => void;\n};\n\nexport const TodoForm: React.FC<Props> = ({ onSubmit }) => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setHasUserIdError(userId === 0);\n\n    if (!title || userId === 0) {\n      return;\n    }\n\n    onSubmit({\n      id: 0,\n      title,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    });\n\n    setTitle('');\n    setUserId(0);\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <input\n          type=\"text\"\n          value={title}\n          placeholder=\"Enter your ToDo here\"\n          data-cy=\"titleInput\"\n          onChange={handleTitleChange}\n        />\n\n        {hasTitleError && (\n          <span className=\"error\">\n            Please enter a title\n          </span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <select\n          data-cy=\"userSelect\"\n          value={userId}\n          onChange={handleUserIdChange}\n        >\n          <option\n            value=\"0\"\n            disabled\n          >\n            Choose a user\n          </option>\n          {usersFromServer.map(user => (\n            <option\n              value={user.id}\n              key={user.id}\n\n            >\n              {user.name}\n            </option>\n          ))}\n        </select>\n        {hasUserIdError && (\n          <span className=\"error\">\n            Please choose a user\n          </span>\n        )}\n\n      </div>\n\n      <button\n        type=\"submit\"\n        data-cy=\"submitButton\"\n\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import './App.scss';\n\nimport { useState } from 'react';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { UsersToDo } from './types/ToDo';\nimport { getUserById } from './services/user';\nimport { TodoForm } from './components/TodoForm/TodoForm';\n\nexport const initialTodos: UsersToDo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nfunction getNewTodoId(todos: UsersToDo[]) {\n  return todos.sort((a, b) => b.id - a.id)[0].id + 1;\n}\n\nexport const App = () => {\n  const [todos, setToDos] = useState<UsersToDo[]>(initialTodos);\n\n  const addTodo = (newTodo: UsersToDo) => {\n    const newTodoClone = newTodo;\n\n    newTodoClone.id = getNewTodoId(todos);\n    setToDos(currentTodos => [...currentTodos, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <TodoForm onSubmit={addTodo} />\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}